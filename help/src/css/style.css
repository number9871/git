/* Селектор {
    свойства: значение;
    свойства: значение;
    свойства: значение;
} 

    * {
        Звёздочка это селектор всего, что есть на странице
    }*/
    /* &:hover псевдокласс */

h1, h2{ /* Селектор по тегу */
    color:rgb(148, 0, 0); /* Цвет можно указывать словами, hex кодом или RGB */
    font-size: 30px; /* Размер шрифта */
    font-weight: 900; /* Жирность шрифта */
    text-align: center; /* Выравнивание по центру, быстро вызвать можно сокращением tac */
    font-style: italic; /* Стиль шрифта */
    text-decoration: underline; /* Декорация текста, подчёркивание */
    /* text-decoration: line-through;  Зачеркивание*/
    text-transform: uppercase; /* Задаёт свойства текста. Верхний, нижний регистры и т.д. */
    transition: 0.5s all; /* плавные анимации, используется для псевдоклассов и псевдоэлементов */
}

.title { /* Селектор по class */
    color: rgba(0, 0, 139, 0.383); /* RGBA так же позволяет указать прозрачность помимо цвета */

}

#begin { /* Селектор по id */
    color: darkgoldenrod;
    
}

.text {
    font-weight: bold;
    text-transform: uppercase;
}

.em {
    font-style: italic;
}

.box {
    vertical-align: middle; /* Выравнивание. Работает только тогда, когда стоит свойство display: inline-block; */
    position: relative;
    /* display: inline; Изменение типа элемента вручную*/
    display: inline-block;
    box-sizing: border-box; /* Задаём жесткие размеры блока по ширине и высоте с учетом границ и отступов */
    width: 300px;
    height: 300px;
    background-color: darkolivegreen;
    padding: 20px; /* Отступы текста от края блока*/
    border-width: 3px; /* Ширина границы */
    border-style: solid; /* Стиль границы */
    border-color: black; /* Цвет границы */
    /* Но так же можно прописать все свойства границы в одну строку border: 3px solid black;*/
    margin: 10px; /* Отступ блока от остального содержимого сайта */
    z-index: 3; /* Тот элемент, что имеет большее значение z-index - выходит на первый план. Что бы поместить элементы с position absolute на второй план, нужно указать для них z-index в отрицательном значении*/
}
.red {
    background-color: red; /* https://cssreference.io/backgrounds/ */
    position: relative;
    z-index: 4;
}
img {
    display: block;
    margin: 0 auto;
    /* float: left; Свойство, благодаря которому текст и другие элементы будут обтекать картинку*/
}

#linklorem {
    display: block;
    width: 300;
    height: 300;
}

nav {
    /* static Соблюдается вся структура html кода и все стоит на своих местах.

     relative Можем менять положение элемента отступами top right bottom left, но наш элемент соблюдает структуры html и за рамки своего местоположения в коде не выходит.

     absolute Элемент может находится на любом месте экрана независимо от кода html ВНУТРИ РОДИТЕЛЬСКОГО БЛОКА, но есть один нюанс если в элементе стоит позиция absolute, то в родительском классе должна стоять позиция relative.

     fixed Элемент также может находиться в любом месте экрана, но при скролле экрана наш элемент будет зафиксирован на своем месте и не будет менять своё положение.

     inherit Наследует свойство position у родительского блока */
    position: absolute;
    left: 130px; /* left right top bottom */
    top: 40;
}
.example {
    position: relative;
    background-color: #aeaeae;
    height: 1000px;
    z-index: 1;
}

/* Блочные элементы - жадные, воруют место
Тег <p> блочный элемент*/

/* Строчные - не жадные, им пох
Марджины можно выставлять только по бокам
Занимают столько места, сколько в них есть контента
Картинки - строчные элементы*/

/* Строчно-блочные - Жадные, но не очень
Берут в себя свойства как блочных, так и строчных элементов*/



/* Еденицы измерения */

/* Специфичность селекторов
Селектор по тегу обладает наименьшим приоритетом
Селектор по классу более приоритетнее
Селектор по классу второй по счёту является более приоритетным, чем предыдущий
Селектор по айди является самым приоритетным 
Инлайн стили в HTML максимально приоритетны

.wrapper .element {
    color: yellow;
}
    Вложенность классов спецефичнее, чем селектор по отдельному классу
    Классов с одинаковыми именами может быть много,
    но вложенность классов указывает на конкретный
    
#second.element {
    color: tomato;
}
*/
